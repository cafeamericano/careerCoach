{"version":3,"sources":["JobCard.js","Container.js","AddRecordForm.js","App.js","serviceWorker.js","index.js","background.jpg"],"names":["style","title","fontSize","fontWeight","JobCard","props","componentDidMount","calculateProgressPercentage","data","progress","determineProgressColor","closure","arg","setState","progressPercentage","progressColor","inflate","activeClass","deflate","flipCard","state","sideShowing","sideToShow","progressStyle","width","this","frontSide","className","onMouseEnter","onMouseLeave","class","companyName","applicationDate","jobTitle","role","backSide","responseDate","comments","onClick","Component","Container","undefined","records","allRecords","jobCardComponents","activeList","filter","element","map","item","key","_id","AddRecordForm","processInput","event","target","name","value","submitForm","preventDefault","allCollectedData","console","log","fetch","method","headers","body","JSON","stringify","updateParentState","onChange","onSubmit","placeholder","type","data-existing","selected","disabled","appStyle","backgroundImage","Background","backgroundSize","backgroundRepeat","backgroundAttachment","App","componentWillMount","pullRecords","updateMyState","clickCounter","then","response","json","setActiveList_All","setActiveList_Outstanding","setActiveList_Withdrawn","setActiveList_ApplicationLost","setActiveList_NeverResponded","setActiveList_Denied","setActiveList_Accepted","allApps","outstandingApps","withdrawnApps","applicationLostApps","neverRespondedApps","deniedApps","acceptedApps","length","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.ff50f684.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nconst style = {\n  title: {\n    fontSize: \"1.4em !important\",\n    fontWeight: \"bolder\"\n  }\n};\n\nclass JobCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      progressPercentage: 0,\n      activeClass: \"card p-2 mb-3 shadow\",\n      sideShowing: \"front\",\n      progressColor: \"progress-bar primary\"\n    };\n  }\n\n  componentDidMount = () => {\n    this.calculateProgressPercentage(this.props.data.progress);\n    this.determineProgressColor(this.props.data.closure);\n  };\n\n  calculateProgressPercentage = arg => {\n    if (arg === \"Application Submitted\") {\n      this.setState({ progressPercentage: 5 });\n    } else if (arg === \"Discussed With Recruiter\") {\n      this.setState({ progressPercentage: 35 });\n    } else if (arg === \"Phone Interview Offered\") {\n      this.setState({ progressPercentage: 60 });\n    } else if (arg === \"Onsite Interview Offered\") {\n      this.setState({ progressPercentage: 80 });\n    } else if (arg === \"Job Offered\") {\n      this.setState({ progressPercentage: 100 });\n    }\n  };\n\n  determineProgressColor = arg => {\n    if (arg === \"Denied\" || arg === \"Never Responded\") {\n      this.setState({ progressColor: \"progress-bar bg-danger\" });\n    } else if (arg === \"Withdrawn\" || arg === \"Application Lost\") {\n      this.setState({ progressColor: \"progress-bar bg-secondary\" });\n    } else {\n      this.setState({ progressColor: \"progress-bar bg-success\" });\n    }\n  };\n\n  inflate = () => {\n    this.setState({ activeClass: \"card p-2 mb-3 shadow animated pulse\" });\n  };\n\n  deflate = () => {\n    this.setState({ activeClass: \"card p-2 mb-3 shadow\" });\n  };\n\n  flipCard = () => {\n    if (this.state.sideShowing === \"front\") {\n      this.setState({ sideShowing: \"back\" });\n    } else {\n      this.setState({ sideShowing: \"front\" });\n    }\n  };\n\n  render() {\n    //Define progress percentage\n    let progressStyle = { width: `${this.state.progressPercentage}%` };\n\n    //Define the front side of the card\n    let frontSide = (\n      <div\n        className={this.state.activeClass}\n        onMouseEnter={this.inflate}\n        onMouseLeave={this.deflate}\n      >\n        <div class=\"card-body\">\n          <span style={style.title} class=\"card-title\">\n            {this.props.data.companyName}\n          </span>\n          <br />\n          <span class=\"card-text ml\">\n            <small class=\"text-muted\">{this.props.data.applicationDate}</small>\n          </span>{\" \"}\n          <span class=\"card-text ml\">\n            <small class=\"text-muted\">*** Days Since N/A***</small>\n          </span>\n          <p class=\"card-text\">{this.props.data.jobTitle}</p>\n          <div className=\"progress\">\n            <div\n              class={this.state.progressColor}\n              role=\"progressbar\"\n              style={progressStyle}\n            ></div>\n          </div>\n          <span class=\"card-text\">\n            <small class=\"text-muted\">{this.props.data.progress}</small>\n          </span>{\" \"}\n          |{\" \"}\n          <span class=\"card-text\">\n            <small class=\"text-muted\">{this.props.data.closure}</small>\n          </span>\n        </div>\n      </div>\n    );\n\n    //Define the back side of the card\n    let backSide = (\n      <div\n        className={this.state.activeClass}\n        onMouseEnter={this.inflate}\n        onMouseLeave={this.deflate}\n      >\n        <div class=\"card-body\">\n          <span style={style.title} class=\"card-title\">\n            {this.props.data.companyName}, {this.props.data.jobTitle}\n          </span>\n          <br />\n          <div class=\"card-text ml\">\n            <small class=\"text-muted\">\n              Heard back on: {this.props.data.responseDate}\n            </small>\n          </div>\n          <div class=\"card-text ml\">\n            <small class=\"text-muted\">\n              Comments: {this.props.data.comments}\n            </small>\n          </div>\n          <hr></hr>\n          <div>\n            <i className=\"fas fa-edit btn btn-info float-left\"></i>\n            <i className=\"fas fa-trash-alt btn btn-danger float-right\"></i>\n          </div>\n        </div>\n      </div>\n    );\n\n    //Pick side to show\n    let sideToShow;\n    if (this.state.sideShowing === \"front\") {\n      sideToShow = frontSide;\n    } else {\n      sideToShow = backSide;\n    }\n\n    //Return\n    return (\n      <div className=\"col-6\" onClick={this.flipCard}>\n        {sideToShow}\n      </div>\n    );\n  }\n}\n\nexport default JobCard;\n","import React, { Component } from \"react\";\nimport JobCard from \"./JobCard\";\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    if (this.props.records !== undefined) {\n      let allRecords = this.props.records;\n      let itemsToReturn;\n      if (this.props.activeList !== \"All\") {\n        itemsToReturn = allRecords.filter(\n          element => element.closure === this.props.activeList\n        );\n      } else {\n        itemsToReturn = allRecords;\n      }\n      let jobCardComponents = itemsToReturn.map(item => (\n        <JobCard key={item._id} data={item} />\n      ));\n      return (\n        <main className=\"container p-3 animated bounceInUp\">\n          <div className=\"row\">{jobCardComponents}</div>\n        </main>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Container;\n","import React, { Component } from \"react\";\n\nvar style = {\n  invisibleInput: {\n    display: \"none\"\n  }\n};\n\nclass AddRecordForm extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  processInput = event => {\n    let { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  submitForm = event => {\n    event.preventDefault();\n    let allCollectedData = this.state;\n    console.log(allCollectedData);\n    fetch(\"/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(allCollectedData)\n    });\n    this.props.updateParentState();\n  };\n\n  render() {\n    return (\n      <form\n        className=\"card shadow p-2 animated slideInRight\"\n        onChange={this.processInput}\n        onSubmit={this.submitForm}\n      >\n        <h3 className=\"text-center\">Add a New Application</h3>\n        <hr></hr>\n        <label>Company Name</label>\n        <input\n          class=\"form-control\"\n          name=\"companyName\"\n          placeholder=\"Company name\"\n        ></input>\n        <br />\n\n        <label>Job Title</label>\n        <input\n          class=\"form-control\"\n          name=\"jobTitle\"\n          placeholder=\"Job title\"\n        ></input>\n        <br />\n\n        <label>Application Date</label>\n        <input class=\"form-control\" name=\"applicationDate\" type=\"date\"></input>\n        <br />\n        {/* \n        <label>First Response Date</label>\n        <input\n          class=\"form-control\"\n          name=\"firstResponseDate\"\n          type=\"date\"\n        ></input>\n        <br /> */}\n\n        <label>Is Major Corporation</label>\n        <select\n          class=\"form-control\"\n          name=\"isMajorCorporation\"\n          data-existing=\"{{this.majorCorporation}}\"\n        >\n          <option selected disabled>\n            Select\n          </option>\n          <option value=\"Yes\">Yes</option>\n          <option value=\"No\">No</option>\n        </select>\n        <br />\n\n        {/* <label>Progress</label>\n        <select\n          class=\"form-control\"\n          id=\"progress\"\n          name=\"progress\"\n          data-existing=\"{{this.progress}}\"\n        >\n          <option value=\"Application Submitted\">Application Submitted</option>\n          <option value=\"Discussed With Recruiter\">\n            Discussed With Recruiter\n          </option>\n          <option value=\"Phone Interview Offered\">\n            Phone Interview Offered\n          </option>\n          <option value=\"Onsite Interview Offered\">\n            Onsite Interview Offered\n          </option>\n          <option value=\"Job Offered\">Job Offered</option>\n        </select>\n        <br />\n\n        <label>Closure</label>\n        <select class=\"form-control\" name=\"closure\">\n          <option value=\"Outstanding\">Outstanding</option>\n          <option value=\"Accepted\">Accepted</option>\n          <option value=\"Denied\">Denied</option>\n          <option value=\"Withdrawn\">Withdrawn</option>\n          <option value=\"Application Lost\">Application Lost</option>\n          <option value=\"Never Responded\">Never Responded</option>\n        </select>\n        <br /> */}\n\n        <label>Comments</label>\n        <input class=\"form-control\" name=\"comments\" type=\"text\"></input>\n        <br />\n\n        <button className=\"btn btn-primary\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default AddRecordForm;\n","import React, { Component } from \"react\";\nimport Container from \"./Container\";\nimport AddRecordForm from \"./AddRecordForm\";\nimport Background from \"./background.jpg\";\n\nlet appStyle = {\n  backgroundImage: `url(${Background})`,\n  backgroundSize: \"cover\",\n  backgroundRepeat: \"repeat\",\n  backgroundAttachment: \"fixed\"\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      records: [],\n      activeList: \"All\",\n      clickCounter: 0\n    };\n  }\n  componentWillMount = () => {\n    this.pullRecords();\n  };\n\n  updateMyState = () => {\n    this.pullRecords();\n    this.setState({ clickCounter: (this.state.clickCounter += 1) });\n  };\n\n  pullRecords = () => {\n    fetch(\"/all\")\n      .then(response => response.json())\n      .then(response => {\n        console.log(response);\n        this.setState({ records: response });\n      });\n    console.log(\"fetched\");\n  };\n\n  setActiveList_All = () => {\n    this.setState({ activeList: \"All\" });\n  };\n\n  setActiveList_Outstanding = () => {\n    this.setState({ activeList: \"Outstanding\" });\n  };\n\n  setActiveList_Withdrawn = () => {\n    this.setState({ activeList: \"Withdrawn\" });\n  };\n\n  setActiveList_ApplicationLost = () => {\n    this.setState({ activeList: \"Application Lost\" });\n  };\n\n  setActiveList_NeverResponded = () => {\n    this.setState({ activeList: \"Never Responded\" });\n  };\n\n  setActiveList_Denied = () => {\n    this.setState({ activeList: \"Denied\" });\n  };\n\n  setActiveList_Accepted = () => {\n    this.setState({ activeList: \"Accepted\" });\n  };\n\n  render() {\n    let allApps = this.state.records;\n    let outstandingApps = this.state.records.filter(\n      item => item.closure === \"Outstanding\"\n    );\n    let withdrawnApps = this.state.records.filter(\n      item => item.closure === \"Withdrawn\"\n    );\n    let applicationLostApps = this.state.records.filter(\n      item => item.closure === \"Application Lost\"\n    );\n    let neverRespondedApps = this.state.records.filter(\n      item => item.closure === \"Never Responded\"\n    );\n    let deniedApps = this.state.records.filter(\n      item => item.closure === \"Denied\"\n    );\n    let acceptedApps = this.state.records.filter(\n      item => item.closure === \"Accepted\"\n    );\n\n    return (\n      <div className='fill-parent-container' style={appStyle}>\n        <nav class=\"navbar navbar-dark bg-dark\">\n          <span class=\"navbar-brand mb-0 h1\">Career Coach</span>\n        </nav>\n        <section className=\"row\">\n          <div className=\"col-2 bg-secondary p-3\">\n            <ul class=\"list-group\">\n              <li class=\"list-group-item\" onClick={this.setActiveList_All}>\n                All{\" \"}\n                <span className=\"badge badge-primary float-right\">\n                  {allApps.length}\n                </span>\n              </li>\n              <li\n                class=\"list-group-item\"\n                onClick={this.setActiveList_Outstanding}\n              >\n                Outstanding{\" \"}\n                <span className=\"badge badge-primary float-right\">\n                  {outstandingApps.length}\n                </span>\n              </li>\n              <li\n                class=\"list-group-item\"\n                onClick={this.setActiveList_Withdrawn}\n              >\n                Withdrawn{\" \"}\n                <span className=\"badge badge-primary float-right\">\n                  {withdrawnApps.length}\n                </span>\n              </li>\n              <li\n                class=\"list-group-item\"\n                onClick={this.setActiveList_ApplicationLost}\n              >\n                Application Lost{\" \"}\n                <span className=\"badge badge-primary float-right\">\n                  {applicationLostApps.length}\n                </span>\n              </li>\n              <li\n                class=\"list-group-item\"\n                onClick={this.setActiveList_NeverResponded}\n              >\n                Never Responded{\" \"}\n                <span className=\"badge badge-primary float-right\">\n                  {neverRespondedApps.length}\n                </span>\n              </li>\n              <li class=\"list-group-item\" onClick={this.setActiveList_Denied}>\n                Denied{\" \"}\n                <span className=\"badge badge-primary float-right\">\n                  {deniedApps.length}\n                </span>\n              </li>\n              <li class=\"list-group-item\" onClick={this.setActiveList_Accepted}>\n                Accepted{\" \"}\n                <span className=\"badge badge-primary float-right\">\n                  {acceptedApps.length}\n                </span>\n              </li>\n            </ul>\n          </div>\n          <div className=\"col-7\">\n            <Container\n              activeList={this.state.activeList}\n              records={this.state.records}\n            />\n          </div>\n          <div className=\"col-3 p-3\">\n            <AddRecordForm updateParentState={this.updateMyState} />\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/background.88864ebd.jpg\";"],"sourceRoot":""}